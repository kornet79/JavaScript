# ㅎㅇ 오늘은 사기적인 언어라고 하는

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/9df4a4ca-e975-4a8b-8e39-6d2360096499/Untitled.png)

를 배우는날입니다!  

우선 이 언어가 무었인지 알아야겠죠?

우선 Java 와 JavaScript 는 완전이 다른 개념이라는 사실 알고 시작하겠습니다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/7c82f4b8-29dd-4328-9da1-e5c165eea09e/Untitled.png)

거기서 거기 아니야? 라고 생각하실수 있는데 

거의 인도랑 인도네시아랑 같냐? 와 같은 질문의 수준 일정도

Java 와 JavaScript 완전히 다른건 아니지만 본질적으로 다르다 이정도만 

- 여기서 재밌는 사실!

JavaScript는 처음부터 JavaScript 라는 이름이 아니라 처음에는 Mocha → LiveScript → JavaScript 로 진화 했다는 사실

## 배워야하는 이유!

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/307969b0-7be2-434e-b986-007b95dc860d/Untitled.png)

보통 Font에서도 사용하지만

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/ca549ecf-48fb-4389-9433-23e6ad98ba69/Untitled.png)

후에 배울 node.js 와 연개하면 Back-end 역할까지 할수 있다는 사실!

그렇기게 배워두면 좋겠죠?

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/9515fbd6-49b6-48bb-b6d1-6a968be252e4/Untitled.png)

이제 핸드폰에서도 돌아가는 앱 APP 만들때도 JavaScript기반에 프레임워크 인 React를 사용하면 IOS, 안드로이드 앱을 만들수도 있다는 사실!

그렇다면 각자의 구조를 확인해볼까요?

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/9f43cba9-2f79-4c55-b638-fec148981218/Untitled.png)

이제 HTML은 뼈대라고 생각하시면 편하고 CSS는 각종 옷들을 설계해준다고 생각하시면 편합니다.  그리고 이것들을 마크업이라고 부르고요.

Javascript 는 신경계라고 생각합니다. 어떤 움직임? 각종 논리 적인 작업들을 담당한다고 생각하시면 편합니다.

그럼 간단하게 배울 목차들을 정리하겠습니다.

- 변수
- 함수
- if
- for

### 1. 변수

예시로 구글창에 변수하나만 입력하도록 하겠습니다. 

이런박싱을 REPL 이라고 하는데 저는 잘모르겠네여

REPL : Read(입력), Eval(평가),Print(출력),Loop(반복) 코드를 입력하면 결과가 바로 출력되는 과정을 반복하는것 

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/78e0254f-2d83-4c65-b450-186a4d0bad87/Untitled.png)

변수 조건들은 

- let 많이사용하는거 보통 변수 앞에 붙임
- const 보통 변하지 않아야하는 변수에 앞에 붙임
- var 애는 모르것음

면접 관이 물어볼수 있는거

호이스팅! : 변수나 함수를 스코프 상단으로 끌어올리는 것으로 버그의 원이 될수 있음

### 2. 함수

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/192849e6-4d1f-4775-9fa1-9a7ebd9aa4e5/Untitled.png)

들어오는 값이 함수를 통해 output나오는 값을 만들수 있는걸 함수라고 보통 합니다.

근데 javascript 에서는 함수를 어떻게 실행하냐?

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/f5050a0f-0e98-487e-b057-8f8eec9e2abd/Untitled.png)

우선 함수를 만들고 

```jsx
function 함수이름 (x)// 사용할변수 즉 매개변수 {
	let temp = 2*x + 3

	return temp // 나올 값
}
```

뭐 대충 요로코롬 만듬

```jsx
함수이름(1)
```

이제 여기 사용할변수에 값을 넣어주면 함수를 호출할수 있음.

근데 포인트!

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/3088c804-2b31-4968-8409-0b0bb4ac7473/Untitled.png)

프로그래밍에서는 입력,출력이 없는 함수가 있을수 있다는점 킵!

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/311e8bf4-4557-4c22-b510-c6b28d05a916/Untitled.png)

뭐 여런식으로 매개변수가 없는대도 함수를 호출하여 사용할수 있고 다른 코드를 짤때도 이런식으로도 많이 사용한다.

이해하시기 어렵다면 마법이라고 생각하시면 편합니다

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/a9d73bc8-0a42-4515-bee0-2814c32cef1f/Untitled.png)

보통 “파이어볼” 이라는 대사하면 지팡이에서 불이 나오는것처럼

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/adef3203-5250-40e2-85c2-af0bf2d7b101/Untitled.png)

파이어볼 이라는 함수에 여러가지 코드들이 있는데 이걸 파이어볼이라는 대사 한구절에 때려박아서 간결하게 사용한다고 하시면 이해하시기 편하실껍니다~.

예시로

```jsx
function add(x,y) {
	let temp = x + y;
	return(temp);
	}
```

이 정도?

### 조건문

돈이 5000원 이상 있으면 택시 탄다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/ab9947ec-7224-44ee-87fe-f4584ff72763/Untitled.png)

순서도 로 나타내면 이정도로 나타낼수 있다.

코드로 사용하면 이렇게 사용할수 있네요

```jsx
if(money > 5000) {
	rideTaxi();
	}
```

만약 추가로 거짓일 경우에는 

```jsx
if(money > 5000) {
	rideTaxi();
	} else if(
		walk();
	}
		
```

요로코롬 할수있다.

여기서 쫌더 복잡하게 한다면

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/654c4072-9d72-421d-b593-f2ebd89282b2/Untitled.png)

이런식으로 할수 있는데

뭐;; 코드로 나타내면

```jsx
if(money > 5000) {
	rideTaxi(); // 위 조건 만족하면 이 코드 실행
} else if(money > 2000) { // 위 조건을 만족하지 않으면 아래조건 실행
	rideBus(); // 만족할시 BUS ㄱㄱ
} else { // 전부다 아닐시
	walk(); // 걍 걸어가
}
```

### 반복문

말그대로 반복을 다따부따 돌려서 내가 원하는 반복적인 일을 쉽게 돌릴수 있음.

음 0~9까지 숫자를 출력하고싶은

```jsx
for (let i = 0; i < 10; i++) {
	str += i
	console.log(i)
}
```

여기서 변형한다면?

```jsx
myArray = [1,2,3,4,5] // myArray 안에 1~5까지의 숫자 배열을 넣어줌

myArray.forEach(element => { 
	console.log("나무 찍기" + element);
	});
```

요것이 forEach 문이다~

뭐 크게 공부할부분도 있지만 요정도는 논리는 이것만 완벽하게 하면 쉽게 가능할것도 있다.

## JavaScript 특

- 널널한 문법
- 좀 특이함
- 이게 왜됨? 이게 겁나 많음

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/0ad29942-435a-4d6c-86fa-f6cedf091b3b/Untitled.png)

???

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/5b7fe4cb-c3b6-4b66-b95f-dd2ce19aba4c/Untitled.png)

?????????????????????

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/a156cc82-d201-4160-ac40-16f8ab23f7dc/55aca019-e89a-4620-9a0d-b121c0d30a11/Untitled.png)

??????????????????????????????????????????????????????????????

끝
